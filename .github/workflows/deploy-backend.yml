name: CI/CD â€” build & deploy backend to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER }}
  CLUSTER_ZONE: ${{ secrets.GKE_ZONE }}
  AR_LOCATION: ${{ secrets.AR_LOCATION }}
  AR_REPOSITORY: ${{ secrets.AR_REPOSITORY }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  K8S_MANIFEST_DIR: ${{ secrets.K8S_MANIFEST_DIR || 'k8s' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Authenticate to GCP using service account JSON stored in GCP_SA_KEY
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Configure Docker to be able to push to Artifact Registry
      - name: Configure docker for Artifact Registry
        run: |
          gcloud --quiet auth configure-docker ${AR_LOCATION}-docker.pkg.dev

      # Build and push docker image to Artifact Registry
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${AR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPOSITORY}/${IMAGE_NAME}:latest
            ${AR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPOSITORY}/${IMAGE_NAME}:${{ github.sha }}

      # (optional) Save image ref used
      - name: Set image variables
        run: |
          echo "IMAGE_URI=${AR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPOSITORY}/${IMAGE_NAME}:${{ github.sha }}" >> $GITHUB_ENV

      # Get GKE credentials for kubectl
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.CLUSTER_ZONE }}
          project_id: ${{ env.PROJECT_ID }}

      # Apply k8s manifests (optional; you may prefer kubectl set image)
      - name: Deploy manifests to GKE (apply)
        run: |
          kubectl apply -f ${K8S_MANIFEST_DIR}/

      # Or update image of deployment (safer atomic update)
      - name: Update backend image in deployment
        run: |
          kubectl set image deployment/physicalc-backend physicalc-backend=${AR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPOSITORY}/${IMAGE_NAME}:${{ github.sha }} --record

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/physicalc-backend --timeout=120s
